# at-rrs configuration is in YAML format.

# The file contains several tasks labeled with names like feed1, feed2, etc.
# These names are for display purposes only and are not parsed.

# Each task must provide a list of 'downloaders' and at least a feed URL.
# The 'downloaders' section is a list, allowing you to specify one or more
# download clients. When adding a torrent, the application will try each
# downloader in the order listed until one succeeds.
#
# Each downloader entry in the list must specify a 'type', which can be
# 'aria2c' or 'transmission'.
# - For 'aria2c', you can specify 'url' and 'token'.
# - For 'transmission', you can specify 'host', 'port', 'username', and 'password'.
# If optional settings (like token, username, password) are omitted, or if required
# settings (like url, host, port) are omitted, default values will be used.
# Default aria2c URL: ws://localhost:6800/jsonrpc
# Default transmission host: localhost, port: 9091
# Note: For Transmission's 'port', DO NOT enclose the number in quotes.

# The 'feed' key can accept either a single URL string or a list of URL strings.
# For each task, torrents will be extracted from each feed URL sequentially.
# This process can be understood as feed aggregation (when the feed content differs)
# or setting up alternative feeds (when the feed content is the same).

# Optional information such as 'filter', 'extractor', and 'interval' can also be 
# provided. The 'filter' section may contain keywords categorized under 'include' 
# and 'exclude'. Both filters are applied to the 'title' element. The 'include' 
# filter can contain multiple strings, representing an OR relationship. If a 
# string contains comma-separated values, they represent an AND relationship. An 
# empty 'include' filter allows all items in the feed. The 'exclude' filter can 
# also contain multiple strings. If a string contains comma-separated values, they 
# represent an AND relationship, and all keywords within the string must be present 
# in the title to exclude the item. Exclusions take priority over inclusions. It is 
# strongly recommended to enclose each line of filtered keywords in double quotes 
# (lines separated by commas should be wrapped in double quotes as a whole), as only 
# string-type keywords are accepted.

# If an 'extracter' is provided, the 'pattern' is used to extract a hash string 
# from the specified 'tag' element to construct a magnet link for downloading. 
# Valid tags include 'title', 'link', 'description', 'enclosure', or 'guid'. 
# Otherwise, the URL in the 'enclosure' element will be downloaded. Note that 
# if an 'extractor' is provided, both a valid 'tag' and 'pattern' must be 
# specified, or the program will exit. This process will be applied to each
# item element in the RSS feed.

# If an 'interval' is specified, the feed is fetched every 'interval' minutes.
# If not, a default interval of 10 minutes is used. If 'interval' is not a positive
# integer, the default 10-minute interval is applied.

# All feeds within a task will apply the listed filter, extracter, and interval. 
# If different processing is required for certain feeds, they should be grouped 
# into separate tasks to accommodate the varying needs.

# Example 1: Task using a single Aria2c downloader with custom settings and filters.
# Example1:
#   downloaders:
#     - type: aria2c
#       url: "ws://localhost:6800/jsonrpc"
#       token: "your_aria2c_secret_token"
#   feed:
#     - http://example.com/feed1
#     - http://example.com/feed11
#   filter:
#     include:
#       - "keyword1, keyword2" # AND relationship within the string
#       - "keyword3"           # OR relationship between strings
#     exclude:
#       - "undesired"
#   extracter:
#     tag: link # Extract magnet link from the 'link' tag
#     pattern: "magnet:\\?xt=urn:btih:([a-fA-F0-9]{40})" # Example magnet link pattern
#   interval: 15 # Fetch every 15 minutes
# Example 2: Task using a single Transmission downloader with authentication.
# Example2:
#   downloaders:
#     - type: transmission
#       host: "192.168.1.100" # Custom host
#       port: 9091
#       username: "transmission_user"
#       password: "transmission_password"
#   feed: http://example.com/feed2 # Single feed URL shorthand
#   interval: 30 # Fetch every 30 minutes

# Example 3: Task using multiple downloaders as fallback.
# It will first try Aria2c, and if that fails, try Transmission.
# Example3:
#   downloaders:
#     - type: aria2c # First attempt: Aria2c (using defaults)
#     - type: transmission # Second attempt: Transmission (using defaults)
#       host: "nas.local" # Override default host for transmission
#   feed: http://example.com/feed3

# Example 4: Task using two Aria2c instances (e.g., local and remote).
# Example4:
#   downloaders:
#     - type: aria2c # Local instance
#       url: "ws://localhost:6800/jsonrpc"
#       token: "local_token"
#     - type: aria2c # Remote instance
#       url: "ws://remote.server:6800/jsonrpc"
#       token: "remote_token"
#   feed: http://example.com/feed4